{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"VirtualDocs \u2013 API and GenAI Testing for SaaS Platforms","text":"<p>VirtualDocs is a documentation system and execution model designed for engineering teams testing mission-critical APIs and generative AI endpoints.</p> <p>This documentation provides a reference framework for defining, validating, and managing tests across microservices, AI endpoints, and CI/CD environments.</p> <p>=== \"Purpose\"</p> <pre><code>Modern software systems increasingly rely on interconnected services and AI systems.\nVirtualDocs focuses on:\n\n- Testable, predictable behavior in both REST APIs and GenAI systems\n- Regulated, auditable test processes\n- Developer-friendly tooling for real-world workflows\n</code></pre> <p>=== \"Audience\"</p> <pre><code>This documentation is designed for:\n\n- Backend engineers testing SaaS microservices\n- ML engineers testing prompts and completions\n- QA teams writing integration test suites\n- DevOps teams automating validation pipelines\n</code></pre> <p>=== \"Core Capabilities\"</p> <pre><code>- YAML and SDK-based test definitions\n- Prompt structure validation for GenAI\n- Multi-env auth handling (token, OAuth2)\n- Semantic and regex-based output checks\n</code></pre> <p>=== \"File Structure\"</p> <pre><code>```\nvirtualdocs/\n\u251c\u2500\u2500 tests/\n\u2502   \u251c\u2500\u2500 get-patient.yaml\n\u2502   \u251c\u2500\u2500 llm-prompt-check.yaml\n\u251c\u2500\u2500 .env\n\u2514\u2500\u2500 mkdocs.yml\n```\n</code></pre>"}]}